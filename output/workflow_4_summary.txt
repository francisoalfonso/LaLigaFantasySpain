====================================================================
üéØ WORKFLOW #4: Fantasy La Liga - Weekly Content Pipeline
====================================================================

‚úÖ ESTADO: CREADO EXITOSAMENTE

üìã INFORMACI√ìN B√ÅSICA:
=======================
- Workflow ID: auxtq56gNSSTrlSc
- Nombre: Fantasy La Liga - Weekly Content Pipeline
- Estado actual: INACTIVO (activar manualmente en n8n UI)
- Creado: 2025-09-30T10:59:27.160Z
- URL n8n: https://n8n-n8n.6ld9pv.easypanel.host/workflow/auxtq56gNSSTrlSc

‚è∞ SCHEDULE CONFIGURADO:
========================
- Cron Expression: 0 6 * * 1
- Horario: Lunes 6:00 AM
- Timezone: Europe/Madrid
- Trigger Type: Schedule Trigger (n8n-nodes-base.scheduleTrigger)

üîß ARQUITECTURA (10 NODOS):
===========================

1. Schedule Trigger - Every Monday 6AM
   - Tipo: n8n-nodes-base.scheduleTrigger
   - Cron: 0 6 * * 1
   - Dispara workflow autom√°ticamente cada lunes 6:00 AM

2. Get Next Gameweek Fixtures
   - Tipo: n8n-nodes-base.httpRequest
   - M√©todo: GET
   - URL: http://localhost:3000/api/fixtures?next=true
   - Obtiene partidos pr√≥xima jornada

3. Get Top Bargains
   - Tipo: n8n-nodes-base.httpRequest
   - M√©todo: GET
   - URL: http://localhost:3000/api/bargains/top?limit=10
   - Obtiene top 10 chollos de la semana

4. Get Team Standings
   - Tipo: n8n-nodes-base.httpRequest
   - M√©todo: GET
   - URL: http://localhost:3000/api/laliga/laliga/standings
   - Obtiene clasificaci√≥n actual de La Liga

5. Create Weekly Content Plan
   - Tipo: n8n-nodes-base.function
   - JavaScript que genera plan de contenido para 7 d√≠as
   - Asigna contenido a reporteros seg√∫n calendario
   - Output: metadata + contentPlan (7 d√≠as)

6. Loop Over Days
   - Tipo: n8n-nodes-base.splitInBatches
   - Itera sobre cada d√≠a del plan (7 iteraciones)
   - Batch size: 1 (procesa d√≠a por d√≠a)

7. Set Variables - Day Content
   - Tipo: n8n-nodes-base.set
   - Prepara variables para d√≠a actual:
     * day (Lunes-Domingo)
     * date (YYYY-MM-DD)
     * contentType
     * reporter
     * scheduledTime

8. Schedule Content
   - Tipo: n8n-nodes-base.httpRequest
   - M√©todo: POST
   - URL: http://localhost:3000/api/content/schedule
   - Body: { day, contentType, scheduledDate, reporter, scheduledTime }
   - ‚ö†Ô∏è ENDPOINT PENDIENTE DE IMPLEMENTAR

9. Aggregate Results
   - Tipo: n8n-nodes-base.function
   - Acumula todos los contenidos programados
   - Output: { totalScheduled, scheduledContent, aggregatedAt }

10. Send Email Summary
    - Tipo: n8n-nodes-base.httpRequest
    - M√©todo: POST
    - URL: http://localhost:3000/api/email/send
    - To: laligafantasyspainpro@gmail.com
    - Subject: üìÖ Plan Contenido Semanal - [Fecha]
    - Body: HTML con calendario completo 7 d√≠as
    - ‚ö†Ô∏è ENDPOINT PENDIENTE DE IMPLEMENTAR

üìÖ CALENDARIO DE CONTENIDO (7 D√çAS):
=====================================

LUNES:
- Tipo: chollos
- Reportero: Carlos Gonz√°lez
- Hora: 09:00
- Descripci√≥n: Chollos inicio semana - Top jugadores infravalorados
- Plataformas: Instagram, TikTok
- Prioridad: 5

MARTES:
- Tipo: analysis
- Reportero: Ana Mart√≠nez
- Hora: 10:00
- Descripci√≥n: An√°lisis t√°ctico jornada - Tendencias y patrones
- Plataformas: YouTube, Instagram
- Prioridad: 4

MI√âRCOLES:
- Tipo: femenina
- Reportero: Luc√≠a Rodr√≠guez
- Hora: 09:00
- Descripci√≥n: F√∫tbol femenino + cantera emergente
- Plataformas: Instagram, YouTube
- Prioridad: 3

JUEVES:
- Tipo: preview
- Reportero: Ana Mart√≠nez + Pablo Mart√≠n
- Hora: 11:00
- Descripci√≥n: Preview jornada + Fantasy hacks Gen Z
- Plataformas: YouTube, TikTok, Instagram
- Prioridad: 5

VIERNES:
- Tipo: tips
- Reportero: Carlos Gonz√°lez + Pablo Mart√≠n
- Hora: 10:00
- Descripci√≥n: Tips Fantasy + contenido viral fin de semana
- Plataformas: TikTok, Instagram Stories, Twitch
- Prioridad: 5

S√ÅBADO:
- Tipo: pre-match
- Reportero: Ana Mart√≠nez
- Hora: 08:00
- Descripci√≥n: An√°lisis pre-partidos + alineaciones optimales
- Plataformas: Instagram, YouTube
- Prioridad: 4

DOMINGO:
- Tipo: reactions
- Reportero: Pablo Mart√≠n + Luc√≠a Rodr√≠guez
- Hora: 20:00
- Descripci√≥n: Reacciones Gen Z + resumen liga femenina
- Plataformas: TikTok, Instagram Stories, Twitch
- Prioridad: 3

üë• EQUIPO DE REPORTEROS:
========================
- Ana Mart√≠nez (Ana Fantasy): Analista t√°ctica principal
- Carlos Gonz√°lez (Carlos Stats): Especialista en estad√≠sticas
- Luc√≠a Rodr√≠guez (Luc√≠a Femenina): F√∫tbol femenino y cantera
- Pablo Mart√≠n (Pablo GenZ): Especialista Gen Z y contenido viral

‚ö†Ô∏è ENDPOINTS BACKEND PENDIENTES:
==================================

1. POST /api/content/schedule
   - Endpoint para programar contenido en base de datos
   - Body esperado:
     {
       "day": "Lunes",
       "contentType": "chollos",
       "scheduledDate": "2025-09-29",
       "reporter": "Carlos Gonz√°lez",
       "scheduledTime": "09:00"
     }
   - Response esperado: { success: true, scheduledId: "..." }

2. POST /api/email/send
   - Endpoint para env√≠o de emails
   - Body esperado:
     {
       "to": "laligafantasyspainpro@gmail.com",
       "subject": "üìÖ Plan Contenido Semanal - 2025-09-29",
       "html": "<html>...</html>"
     }
   - Response esperado: { success: true, emailSent: true }

üîç TESTING SUGERIDO:
====================

1. ACTIVAR WORKFLOW EN N8N UI:
   - Ir a: https://n8n-n8n.6ld9pv.easypanel.host
   - Abrir workflow: auxtq56gNSSTrlSc
   - Click en toggle "Active" (esquina superior derecha)

2. VERIFICAR ENDPOINTS BACKEND (antes de ejecutar workflow):
   curl http://localhost:3000/api/fixtures?next=true
   curl http://localhost:3000/api/bargains/top?limit=10
   curl http://localhost:3000/api/laliga/laliga/standings

3. EJECUTAR WORKFLOW MANUALMENTE (para testing):
   curl -X POST "https://n8n-n8n.6ld9pv.easypanel.host/api/v1/workflows/auxtq56gNSSTrlSc/execute" \
     -H "X-N8N-API-KEY: [tu_api_key]"

4. MONITOREAR EJECUCIONES:
   - Dashboard n8n: https://n8n-n8n.6ld9pv.easypanel.host/workflow/auxtq56gNSSTrlSc/executions
   - Logs backend: npm run dev

üí° PR√ìXIMOS PASOS (ORDEN DE PRIORIDAD):
========================================

1. ‚úÖ COMPLETADO: Workflow #4 creado con 10 nodos
2. ‚è≥ TODO: Implementar POST /api/content/schedule en backend
3. ‚è≥ TODO: Implementar POST /api/email/send en backend
4. ‚è≥ TODO: Activar workflow en n8n UI
5. ‚è≥ TODO: Testing completo con ejecuci√≥n manual
6. ‚è≥ TODO: Monitorear primera ejecuci√≥n autom√°tica (pr√≥ximo lunes)

üìä M√âTRICAS DEL WORKFLOW:
==========================
- Total nodos: 10
- HTTP Requests: 5 (3 GET, 2 POST)
- Function nodes: 2 (planificaci√≥n + agregaci√≥n)
- Loops: 1 (7 iteraciones - una por d√≠a)
- Triggers: 1 (Schedule - cron)
- Ejecuciones esperadas: 1 vez por semana (lunes 6:00 AM)
- Tiempo estimado de ejecuci√≥n: 2-3 minutos (incluyendo loops)

====================================================================
END OF SUMMARY
====================================================================

#!/usr/bin/env node

/**
 * TEST COMPLETO 2 SEGMENTOS - Validaci√≥n exhaustiva
 *
 * Validaciones:
 * 1. ‚úÖ Ana aparece en ambos segmentos
 * 2. ‚úÖ Consistencia visual de Ana
 * 3. ‚úÖ Transiciones suaves
 * 4. ‚úÖ Espa√±ol de Espa√±a (no mexicano)
 * 5. ‚úÖ Logo al final
 */

require('dotenv').config();
const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

// Colores
const colors = {
    reset: '\x1b[0m',
    bright: '\x1b[1m',
    green: '\x1b[32m',
    red: '\x1b[31m',
    yellow: '\x1b[33m',
    blue: '\x1b[34m',
    cyan: '\x1b[36m',
    magenta: '\x1b[35m'
};

function log(message, color = 'reset') {
    console.log(`${colors[color]}${message}${colors.reset}`);
}

function section(title) {
    log('\n' + '‚ïê'.repeat(70), 'cyan');
    log(`  ${title}`, 'bright');
    log('‚ïê'.repeat(70), 'cyan');
}

async function main() {
    log('\nüß™ TEST COMPLETO - 2 SEGMENTOS CON VALIDACI√ìN EXHAUSTIVA', 'bright');
    log('‚ïê'.repeat(70), 'cyan');

    const startTime = Date.now();

    section('üìã CONFIGURACI√ìN DEL TEST');

    const testConfig = {
        playerName: 'Lamine Yamal',
        team: 'Barcelona',
        price: 7.2,
        ratio: 1.45,
        stats: {
            position: 'FWD',
            estimatedPoints: 10.4,
            games: 6,
            minutes: 480,
            goals: 3,
            assists: 2,
            rating: 7.9
        },
        // SOLO 2 segmentos para el test
        numSegments: 2,
        addLogo: true // ‚úÖ Agregar logo al final
    };

    log('   Jugador: ' + testConfig.playerName, 'cyan');
    log('   Equipo: ' + testConfig.team, 'cyan');
    log('   Segmentos: ' + testConfig.numSegments, 'cyan');
    log('   Logo al final: ' + (testConfig.addLogo ? '‚úÖ S√ç' : '‚ùå NO'), 'cyan');

    section('üé¨ PASO 1: Generando video con 2 segmentos');

    log('üì§ Enviando request a /api/veo3/generate-viral...', 'yellow');

    try {
        const response = await axios.post(
            `${BASE_URL}/api/veo3/generate-viral`,
            testConfig,
            {
                timeout: 900000 // 15 minutos
            }
        );

        const duration = ((Date.now() - startTime) / 1000 / 60).toFixed(2);

        if (response.data.success) {
            section('‚úÖ VIDEO GENERADO EXITOSAMENTE');

            log(`\n‚è±Ô∏è  Tiempo total: ${duration} minutos`, 'green');
            log(`üìπ Archivo: ${response.data.video?.outputPath || 'N/A'}`, 'cyan');
            log(`‚è≥ Duraci√≥n: ${response.data.video?.duration || 'N/A'}s`, 'cyan');
            log(`üéûÔ∏è  Segmentos: ${response.data.video?.segments || 'N/A'}`, 'cyan');

            section('üìã CHECKLIST DE VALIDACI√ìN');

            const videoPath = response.data.video?.outputPath;

            log('\n1. ‚úÖ Ana aparece en ambos segmentos', 'green');
            log('   ‚Üí Verificar manualmente en el video', 'cyan');

            log('\n2. ‚è≥ Consistencia visual de Ana', 'yellow');
            log('   ‚Üí Verificar que Ana mantiene la misma apariencia', 'cyan');
            log('   ‚Üí Misma ropa, peinado, iluminaci√≥n', 'cyan');

            log('\n3. ‚è≥ Transiciones suaves', 'yellow');
            log('   ‚Üí Verificar que no hay saltos bruscos entre segmentos', 'cyan');
            log('   ‚Üí Ana en posici√≥n similar al final de seg1 e inicio de seg2', 'cyan');

            log('\n4. ‚è≥ Espa√±ol de Espa√±a', 'yellow');
            log('   ‚Üí Escuchar el audio completo', 'cyan');
            log('   ‚Üí Verificar acento espa√±ol peninsular (no mexicano)', 'cyan');
            log('   ‚Üí Pronunciaci√≥n: "vosotros", "z" como "th"', 'cyan');

            log('\n5. ‚è≥ Logo al final', 'yellow');
            log('   ‚Üí Verificar que aparece logo "Fantasy La Liga Pro"', 'cyan');
            log('   ‚Üí Al final del video (√∫ltimos 2-3 segundos)', 'cyan');

            section('üéØ PR√ìXIMOS PASOS');

            log('\n1. Abre el video:', 'cyan');
            log(`   open "${videoPath}"`, 'yellow');

            log('\n2. Verifica cada punto del checklist:', 'cyan');
            log('   ‚ñ° Ana aparece en AMBOS segmentos', 'yellow');
            log('   ‚ñ° Ana es consistente visualmente', 'yellow');
            log('   ‚ñ° Transiciones suaves (sin saltos)', 'yellow');
            log('   ‚ñ° Acento espa√±ol de Espa√±a', 'yellow');
            log('   ‚ñ° Logo al final del video', 'yellow');

            log('\n3. Reporta los resultados:', 'cyan');
            log('   ‚úÖ Todo OK ‚Üí Continuar con 3-4 segmentos', 'green');
            log('   ‚ùå Problemas ‚Üí Ajustar configuraci√≥n', 'red');

            // Abrir video autom√°ticamente
            const { exec } = require('child_process');
            exec(`open "${videoPath}"`);

            log('\n‚úÖ Video abierto autom√°ticamente\n', 'green');

        } else {
            log('\n‚ùå Error en generaci√≥n:', 'red');
            log(JSON.stringify(response.data, null, 2), 'red');
        }

    } catch (error) {
        log('\n‚ùå ERROR FATAL:', 'red');

        if (error.response?.data) {
            log(JSON.stringify(error.response.data, null, 2), 'red');
        } else {
            log(error.message, 'red');
        }

        process.exit(1);
    }
}

main();
